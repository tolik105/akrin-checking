// AKRIN Content Management System Database Schema
// Comprehensive schema for SEO-optimized content management with bilingual support

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Content Management Models
model Content {
  id              String   @id @default(cuid())
  title           String
  slug            String   @unique
  contentHtml     String   @map("content_html")
  excerpt         String?
  metaTitle       String?  @map("meta_title")
  metaDescription String?  @map("meta_description")
  focusKeyword    String?  @map("focus_keyword")
  language        Language @default(EN)
  status          ContentStatus @default(DRAFT)
  featuredImage   String?  @map("featured_image")
  authorName      String?  @map("author_name")
  authorRole      String?  @map("author_role")
  readTime        String?  @map("read_time")
  viewCount       Int      @default(0) @map("view_count")
  seoScore        Float?   @map("seo_score")
  publishedAt     DateTime? @map("published_at")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  // Relations
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      String?   @map("category_id")
  keywords        ContentKeyword[]
  media           ContentMedia[]
  analytics       ContentAnalytics[]

  @@map("content")
}

model Category {
  id          String   @id @default(cuid())
  nameEn      String   @map("name_en")
  nameJa      String?  @map("name_ja")
  slugEn      String   @unique @map("slug_en")
  slugJa      String?  @unique @map("slug_ja")
  description String?
  color       String?  // Hex color for UI
  sortOrder   Int      @default(0) @map("sort_order")
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  content     Content[]

  @@map("categories")
}

model Keyword {
  id             String   @id @default(cuid())
  keyword        String   @unique
  language       Language @default(EN)
  searchVolume   Int?     @map("search_volume")
  difficulty     Int?     // 1-100 scale
  cpc            Float?   // Cost per click
  competition    String?  // low, medium, high
  currentRank    Int?     @map("current_rank")
  bestRank       Int?     @map("best_rank")
  trend          String?  // up, down, stable
  lastUpdated    DateTime @default(now()) @map("last_updated")
  isTarget       Boolean  @default(false) @map("is_target") // Priority keywords
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  // Relations
  content        ContentKeyword[]

  @@map("keywords")
}

model ContentKeyword {
  id        String @id @default(cuid())
  contentId String @map("content_id")
  keywordId String @map("keyword_id")
  isPrimary Boolean @default(false) @map("is_primary") // Focus keyword
  density   Float?  // Keyword density percentage

  content   Content @relation(fields: [contentId], references: [id], onDelete: Cascade)
  keyword   Keyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)

  @@unique([contentId, keywordId])
  @@map("content_keywords")
}

model ContentMedia {
  id          String    @id @default(cuid())
  contentId   String    @map("content_id")
  filename    String
  originalName String   @map("original_name")
  mimeType    String    @map("mime_type")
  size        Int       // File size in bytes
  url         String
  altText     String?   @map("alt_text")
  caption     String?
  sortOrder   Int       @default(0) @map("sort_order")
  createdAt   DateTime  @default(now()) @map("created_at")

  content     Content   @relation(fields: [contentId], references: [id], onDelete: Cascade)

  @@map("content_media")
}

model ContentAnalytics {
  id              String   @id @default(cuid())
  contentId       String   @map("content_id")
  date            DateTime @default(now())
  views           Int      @default(0)
  uniqueViews     Int      @default(0) @map("unique_views")
  avgTimeOnPage   Int?     @map("avg_time_on_page") // seconds
  bounceRate      Float?   @map("bounce_rate") // percentage
  organicTraffic  Int      @default(0) @map("organic_traffic")
  socialShares    Int      @default(0) @map("social_shares")
  backlinks       Int      @default(0)
  keywordRankings Json?    @map("keyword_rankings") // Store ranking data as JSON
  createdAt       DateTime @default(now()) @map("created_at")

  content         Content  @relation(fields: [contentId], references: [id], onDelete: Cascade)

  @@unique([contentId, date])
  @@map("content_analytics")
}



// Enums
enum Language {
  EN
  JA
}

enum ContentStatus {
  DRAFT
  SCHEDULED
  PUBLISHED
  ARCHIVED
}
